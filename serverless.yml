service: unitemate
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  region: ap-northeast-1
  stackName: ${sls:stage}-${self:service}-stack
  deploymentBucket:
    name: ${self:service}.sls-deployment-store
    maxPreviousDeploymentArtifacts: 3
  logRetentionInDays: 7
  apiGateway:
    apiKeys:
      - name: ${sls:stage}-${self:service}-apiKey
        value: ${ssm:/${self:service}/${sls:stage}/apiKey}
        description: API Key for ${sls:stage}-${self:service}
  iam:
    role:
      name: ${self:service}-role-${sls:stage}
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - !GetAtt DynamoDBMatchQueue.Arn
            - !Join ["", [!GetAtt DynamoDBMatchQueue.Arn, "/index/*"]]
            - !GetAtt DynamoDBMatchTable.Arn
            - !Join ["", [!GetAtt DynamoDBMatchTable.Arn, "/index/*"]]
            - !GetAtt DynamoDBUserTable.Arn
            - !Join ["", [!GetAtt DynamoDBUserTable.Arn, "/index/*"]]
  environment:
    MATCH_QUEUE: !Ref DynamoDBMatchQueue
    MATCH_TABLE: !Ref DynamoDBMatchTable
    USER_TABLE: !Ref DynamoDBUserTable

package:
  individually: true
  patterns:
    - "!**"
    - src/**
    - pyproject.toml
    - poetry.lock

functions:
  inqueue: # キューにインキューするAPI
    handler: app/inqueue.handle
    events:
      - http:
          path: v1/queue/_inqueue
          method: post
          private: true
  dequeue: # キューからデキューするAPI
    handler: app/dequeue.handle
    events:
      - http:
          path: v1/queue/_dequeue
          method: post
          private: true
  queue_info: # キューの情報を取得するAPI
    handler: app/queue_info.handle
    events:
      - http:
          path: v1/queue
          method: get
          private: true
  match_make: # マッチメイクするバッチ
    handler: app/match_make.handle
    events:
      - schedule:
          name: ${sls:stage}-${self:service}-match-make-schedule
          description: Schedule for match making
          rate: cron(*/5 * * * ? *)
  match_report: # 試合終了後の試合結果を報告するAPI
    handler: app/match_report.handle
    events:
      - http:
          path: v1/match/_report
          method: post
          private: true
  match_judge: # 試合終了後、試合結果を判定するバッチ
    handler: app/match_judge.handle
  user_upsert: # ユーザを作成・更新するAPI
    handler: app/user_upsert.handle
    events:
      - http:
          path: v1/users/{user_id}
          method: post
          private: true
  user_delete: # ユーザを削除するAPI
    handler: app/user_delete.handle
    events:
      - http:
          path: v1/users/{user_id}/_delete
          method: post
          private: true
  user_info: # ユーザ情報を返すAPI
    handler: app/user_info.handle
    events:
      - http:
          path: v1/users/{user_id}
          method: get
          private: true
  rankings: # ユーザのレートランキングを返すAPI
    handler: app/rankings.handle
    events:
      - http:
          path: v1/rankings
          method: get
          private: true

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin

resources:
  Resources:
    DynamoDBMatchQueue:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-${self:service}-match-queue
        AttributeDefinitions:
          - AttributeName: namespace
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: rate
            AttributeType: "N"
        KeySchema:
          - AttributeName: namespace
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: rate_index
            KeySchema:
              - AttributeName: namespace
                KeyType: HASH
              - AttributeName: rate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DynamoDBMatchTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-${self:service}-matches
        AttributeDefinitions:
          - AttributeName: namespace
            AttributeType: S
          - AttributeName: match_id
            AttributeType: "N"
          - AttributeName: status
            AttributeType: S
          - AttributeName: matched_unixtime
            AttributeType: "N"
        KeySchema:
          - AttributeName: namespace
            KeyType: HASH
          - AttributeName: match_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: status_index
            KeySchema:
              - AttributeName: namespace
                KeyType: HASH
              - AttributeName: status
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: match_time_index
            KeySchema:
              - AttributeName: namespace
                KeyType: HASH
              - AttributeName: matched_unixtime
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DynamoDBUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-${self:service}-users
        AttributeDefinitions:
          - AttributeName: namespace
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: rate
            AttributeType: "N"
        KeySchema:
          - AttributeName: namespace
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: rate_index
            KeySchema:
              - AttributeName: namespace
                KeyType: HASH
              - AttributeName: rate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
